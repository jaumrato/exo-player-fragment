buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath 'me.tatarka:gradle-retrolambda:3.6.0'
    classpath 'com.jakewharton:butterknife-gradle-plugin:8.6.0'
  }
}

repositories {
  mavenCentral()
}

apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

retrolambda {
  javaVersion JavaVersion.VERSION_1_7
  defaultMethods false
  incremental false
}

android {
  compileSdkVersion 26
  buildToolsVersion "26.0.0"

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  defaultConfig {
    minSdkVersion 16
    targetSdkVersion 26
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  compile 'com.android.support:appcompat-v7:26.+'
  compile 'com.jakewharton:butterknife:8.5.1'
  annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
  compile 'com.google.android.exoplayer:exoplayer:r2.4.2'
  compile 'org.greenrobot:eventbus:3.0.0'
  testCompile 'junit:junit:4.12'
}

// publishing
def libraryGroupId = 'com.github.slashrootv200'
def libraryArtifactId = 'exo-player-fragment'
def libraryVersion = '0.0.1'
publishing {
  publications {
    aar(MavenPublication) {
      groupId libraryGroupId
      version libraryVersion
      artifactId libraryArtifactId

      artifact("$buildDir/outputs/aar/${artifactId}-release.aar")

      //generate pom nodes for dependencies
      pom.withXml {
        def dependenciesNode = asNode().appendNode('dependencies')
        configurations.compile.allDependencies.each { dependency ->
          if (dependency.name != 'unspecified') {
            println "dependency.name = $dependency.name"
            def dependencyNode = dependenciesNode.appendNode('dependency')
            dependencyNode.appendNode('groupId', dependency.group)
            dependencyNode.appendNode('artifactId', dependency.name)
            dependencyNode.appendNode('version', dependency.version)
          }
        }
      }
    }
  }
}

artifactory {
  //  contextUrl = 'http://192.168.0.200:8081/artifactory'
  contextUrl = 'http://192.168.1.223:8081:8081/artifactory'
  publish {
    repository {
      repoKey = 'libs-release-local'
      username = artifactory_username
      password = artifactory_password
    }
    defaults {
      publications('aar')
      publishArtifacts = true
      properties = ['qa.level': 'basic', 'q.os': 'android', 'dev.team': 'core']
      publishPom = true
    }
  }
}
